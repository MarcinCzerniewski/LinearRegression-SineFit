/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package linearregression1;

/**
 *
 * @author house
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import java.text.NumberFormat;

public class LinRegGui extends javax.swing.JFrame {

 Graph graph1;
 DFspikes dfs;
 LinReg6 lr;
 double A1; //sine amplitude after linear regression calc
 double Theta;// DF signal phase (bearing)
 double dfPhase;
 String brg;
 double Brg;
 int NoS; //num of DF samples to process
 NumberFormat numberFormat;//formating slider degrees for TF

    public LinRegGui() {
        System.out.println("Start linRegGui");
        brg="45.0"; Brg=45;
        NoS=96;
        numberFormat = NumberFormat.getInstance();

       // set number of decimal places
       numberFormat.setMinimumFractionDigits(1);
       numberFormat.setMaximumFractionDigits(1);
      //define the length of integer that is the count of digits before the decimal point
       numberFormat.setMinimumIntegerDigits(1);
       numberFormat.setMaximumIntegerDigits(5);
        
       
        dfPhase=0.0;
        initComponents();
          
        dfs=new DFspikes(this,NoS);
        lr=new LinReg6(NoS);
          lr.addNoise();
        lr.doIteration();
    }

    public void drawDFspikes(){
        System.out.println("draw DF spikes Y[]");
        int k=1;
        for (int x=1;x<1024;x++){
            if(x<17){      System.out.println("draw DF spikes Y[] x="+x+" Y[x]="+lr.Y[x]);}
           int x2=x;      
           double x3=Math.toRadians(x/2.0);
           graph2.addString("1","2","3","4","5","6","7","8","9");
           int y2=245;
if (x==1){System.out.println("draw DF spikes Y[] x="+x+" Y[1]="+lr.Y[1]);y2=245-(int)(40*lr.Y[1]);k++;}
           if (x%16==0&&k>1){
               //y2=125+(int)(40*dfs.y1[k]);
               y2=245-(int)(40*lr.Y[k]);
               //System.out.println("k="+k+" y2="+dfs.y1[k]+" sin(74)="+(int)(40*dfs.Ao*Math.sin(x3+Theta))+" x3="+x/2.0);
               if(k<NoS)k++;
               System.out.println("k="+k+"  x="+x+" x2="+x2+"\t"+lr.Y[k]);
           }
         

//System.out.println("k="+k+" x="+x+" x/k="+x/k+" x%37="+x%37);



           graph2.addPoint(1, x, x2, y2);

    }
    }
private void draw() {

//calculate y2[] values for selected beta
     System.out.println("brg="+brg);
     brg=tf_bearing.getText();
     Brg=Double.parseDouble(brg);
     dfs.getBeta(Brg);
     //create simulated spikes received
     dfs.setUpDFspikeArray(Brg); //y2=Ao*sine(wt+beta)

     //set up array of angle values 11.25,33.5 45.00 ... X[]
     lr.setUpAngleValues();
     lr.clearVariables();
    // lr.setSpikesValues(); //df spikes height w/o phase shift
     //send received DF spikes to LinReg.class
     lr.getDFspikes(dfs.y2);
     String noise=tf_noisePercent.getText();
     if(checkBox_noise.isSelected()){lr.randomizeSpikes(noise,NoS);}
     lr.doIteration();
    //drawDFspikes(); ;
     A1=lr.getSineAmplitude();
     Theta=lr.getPhase();//in rad
drawDFspikes();
     double temp=Math.toDegrees(Theta);
     if(A1<0){
              temp=temp+180.0;
              }else{if(temp<0){temp=360+temp;}};
              
            
     String str=numberFormat.format(temp);
       System.out.println("1 A1="+A1+" theta temp="+temp+" str="+str); 
     tf_calculatedBearing.setText(str);

     System.out.println("2 A1="+A1+" theta="+Math.toDegrees(Theta));
     drawFittedSine();

}                                        
    //draw fitted sinewave
    public void drawFittedSine(){

        for (int x=1;x<1024;x++){
           int x2=x;
           double x3=Math.toRadians(x*1.405);
           int y2=-(int)(40*A1*Math.sin(x3+Theta+Math.toRadians(11.25)))+245;
            
           graph2.addPoint(2, x, x2, y2);
       }
     }

    public void drawTest(){
        System.out.println("drawTest");
           for (int x=1;x<5;x++){
            int x2=x;
            int y2=3*x;


          // graph1.addPoint(2, x, x2, y2);
       }
       // graph1.addString("1","22","1","22","1","22","1","22","9");

    }





    /**
     * Creates new form LinRegGui
     */


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphPanel = new javax.swing.JPanel();
        graph2 = new graphpanel.Graph();
        mainPanel = new javax.swing.JPanel();
        checkBox_noise = new javax.swing.JCheckBox();
        btn_drawSpikesRef = new javax.swing.JButton();
        tf_bearing = new javax.swing.JTextField();
        tf_calculatedBearing = new javax.swing.JTextField();
        slider_degrees = new javax.swing.JSlider();
        tf_noisePercent = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        graphPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sine Fit to DF Samples"));

        graph2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        graph2.setPreferredSize(new java.awt.Dimension(800, 500));
        graph2.setRequestFocusEnabled(false);

        javax.swing.GroupLayout graph2Layout = new javax.swing.GroupLayout(graph2);
        graph2.setLayout(graph2Layout);
        graph2Layout.setHorizontalGroup(
            graph2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1064, Short.MAX_VALUE)
        );
        graph2Layout.setVerticalGroup(
            graph2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphPanelLayout.createSequentialGroup()
                .addComponent(graph2, javax.swing.GroupLayout.PREFERRED_SIZE, 1068, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(graph2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));

        checkBox_noise.setText("add Noise");

        btn_drawSpikesRef.setText("calculate");
        btn_drawSpikesRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_drawSpikesRefActionPerformed(evt);
            }
        });

        tf_bearing.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_bearing.setText("0");

        tf_calculatedBearing.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_calculatedBearing.setText("0");

        slider_degrees.setMajorTickSpacing(10);
        slider_degrees.setMaximum(360);
        slider_degrees.setPaintTicks(true);
        slider_degrees.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_degreesStateChanged(evt);
            }
        });

        tf_noisePercent.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_noisePercent.setText("5");

        jLabel1.setText("%");

        jLabel2.setText("Bearing Set");

        jLabel3.setText("Bearing Calculculated");

        jLabel4.setText("Bearing");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_bearing, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(59, 59, 59)))
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slider_degrees, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(checkBox_noise)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_noisePercent, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(123, 123, 123)
                        .addComponent(btn_drawSpikesRef)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_calculatedBearing, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(0, 387, Short.MAX_VALUE)))
                .addGap(37, 37, 37))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slider_degrees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBox_noise)
                    .addComponent(btn_drawSpikesRef)
                    .addComponent(tf_bearing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_calculatedBearing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_noisePercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_drawSpikesRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_drawSpikesRefActionPerformed
 
        draw();
        /*
//calculate y2[] values for selected beta
     dfs.getBeta(dfPhase);
     dfs.setUpDFspikeArray();

     //set up array of angle values 11.25,33.5 45.00 ... X[]
     lr.setUpAngleValues();
     lr.clearVariables();
    // lr.setSpikesValues();

     lr.getDFspikes(dfs.y2);
     if(checkBox_noise.isSelected()){lr.randomizeSpikes();}
     lr.doIteration();
     drawDFspikes();
     A1=lr.getSineAmplitude();
     Theta=lr.getPhase();//in rad

     double temp=Math.toDegrees(Theta);
     if(A1<0){
              temp=temp+180.0;
              }else{if(temp<0){temp=360+temp;}};

     String str=numberFormat.format(temp);
     tf_bearing.setText(str);

     System.out.println("A1="+A1+" theta="+Math.toDegrees(Theta));
     drawDFreference();
*/
    }//GEN-LAST:event_btn_drawSpikesRefActionPerformed

    private void slider_degreesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_degreesStateChanged
       
        int bearing=(int)slider_degrees.getValue();
        Brg=(double)bearing;
        //System.out.println("slider brg="+Brg);
        brg=Double.toString(Brg);
        tf_bearing.setText(brg);
        draw();
    }//GEN-LAST:event_slider_degreesStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        System.out.println("linreg main()");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LinRegGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LinRegGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LinRegGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LinRegGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new LinRegGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_drawSpikesRef;
    public javax.swing.JCheckBox checkBox_noise;
    private graphpanel.Graph graph2;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JSlider slider_degrees;
    private javax.swing.JTextField tf_bearing;
    private javax.swing.JTextField tf_calculatedBearing;
    private javax.swing.JTextField tf_noisePercent;
    // End of variables declaration//GEN-END:variables
}
